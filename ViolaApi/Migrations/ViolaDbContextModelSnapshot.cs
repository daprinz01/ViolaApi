// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViolaApi.DLL;

namespace ViolaApi.Migrations
{
    [DbContext(typeof(ViolaDbContext))]
    partial class ViolaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ViolaApi.DLL.ApiAssets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("SocialNetworksId");

                    b.HasKey("Id");

                    b.HasIndex("SocialNetworksId");

                    b.ToTable("ApiAssets");
                });

            modelBuilder.Entity("ViolaApi.DLL.SocialNetworks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.Property<string>("Name");

                    b.Property<string>("Uri");

                    b.Property<string>("ViolaUserId");

                    b.HasKey("Id");

                    b.HasIndex("ViolaUserId");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("ViolaRoleClaims");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaRoles", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("ViolaRoles");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("State");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ViolaUser");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ViolaUserClaims");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ViolaUserLogins");
                });

            modelBuilder.Entity("ViolaApi.DLL.ViolaUserRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ViolaUserRoles");
                });

            modelBuilder.Entity("ViolaApi.DLL.ApiAssets", b =>
                {
                    b.HasOne("ViolaApi.DLL.SocialNetworks", "SocialNetworks")
                        .WithMany("ApiAssets")
                        .HasForeignKey("SocialNetworksId");
                });

            modelBuilder.Entity("ViolaApi.DLL.SocialNetworks", b =>
                {
                    b.HasOne("ViolaApi.DLL.ViolaUser", "ViolaUser")
                        .WithMany("SocialNetworks")
                        .HasForeignKey("ViolaUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
